(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    define('Gizmo', [], factory);
  } else if (typeof module !== 'undefined' && module.exports) {
    module.exports = factory();
  } else {
    root.Gizmo = factory();
  }
}(this, function () {var helpers_Dot = function () {
        var Dot = {
                construct: function () {
                    var dot = this.extend({}, this);
                    return this.mixin.apply(dot, [].slice.call(arguments));
                },
                mixin: function () {
                    return this.extend.apply(this, [this].concat([].slice.call(arguments)));
                },
                extend: function (object) {
                    var sources, self;
                    sources = [].slice.call(arguments, 1);
                    self = this;
                    sources.forEach(function (source) {
                        for (var item in source) {
                            if (self.has(source, item)) {
                                object[item] = source[item];
                            }
                        }
                    });
                    return object;
                },
                has: function (object, item) {
                    return Object.hasOwnProperty.call(object, item);
                }
            };
        return Dot;
    }();
var helpers_Base = function (Dot) {
        var Base = {
                construct: function () {
                    return Object.create(this);
                },
                extend: function (object) {
                    return Dot.extend(Object.create(this), object);
                },
                instanceOf: function (prototype) {
                    var object = this;
                    while (object) {
                        if (object === prototype) {
                            return true;
                        }
                        object = Object.getPrototypeOf(object);
                    }
                    return false;
                }
            };
        return Base;
    }(helpers_Dot);
var gizmo = function (Base) {
        return Base;
    }(helpers_Base);  return gizmo;
}));